// Generated by CoffeeScript 1.10.0
(function() {
  var Singleton, bodyParser, compress, cookieParser, express, methodOverride, path;

  path = require('path');

  express = require('express');

  bodyParser = require('body-parser');

  cookieParser = require('cookie-parser');

  compress = require('compression');

  methodOverride = require('method-override');

  module.exports = Singleton = (function() {
    var Server, instance;

    function Singleton() {}

    instance = null;

    Server = (function() {
      function Server() {}

      Server.prototype.init = function() {
        this.app = express();
        this._setViewEngine();
        this._setBodyParser();
        this._setCookieParser();
        this._setCompression();
        this._setMethodOverride();
        console.log('Listening on ', process.env.PORT);
        return this.app.listen(process.env.PORT);
      };

      Server.prototype._setViewEngine = function() {
        this.app.set('views', path.join(__dirname, '../', '../', 'views'));
        this.app.set('view engine', 'ejs');
        return this.app.use(express["static"]('public'));
      };

      Server.prototype._setBodyParser = function() {
        this.app.use(bodyParser.json());
        return this.app.use(bodyParser.urlencoded({
          extended: true
        }));
      };

      Server.prototype._setCookieParser = function() {
        return this.app.use(cookieParser());
      };

      Server.prototype._setCompression = function() {
        return this.app.use(compress());
      };

      Server.prototype._setMethodOverride = function() {
        return this.app.use(methodOverride());
      };

      return Server;

    })();

    Singleton.get = function() {
      return instance != null ? instance : instance = new Server();
    };

    return Singleton;

  })();

}).call(this);

//# sourceMappingURL=index.js.map
